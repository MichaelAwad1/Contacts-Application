import { AbstractLayout, Dimension, HtmlCompPrefSizeOptions } from '../index';
export interface ColumnLayoutData {
    widthHint?: number;
}
export interface ColumnLayoutOptions {
    /** If true, all elements will be as height as the container. Default is true. */
    stretch?: boolean;
    /** If true, the layout won't change the width of the elements because they depend on the width set by the stylesheet. Default is false. */
    useCssWidth?: number;
}
/**
 * ColumnLayout = each child element represents a column
 * +------+---+------+
 * |      |   |      |
 * +------+---+------+
 */
export declare class ColumnLayout extends AbstractLayout implements ColumnLayoutOptions {
    stretch: boolean;
    useCssWidth: number;
    constructor(options?: ColumnLayoutOptions);
    protected _getChildren($container: JQuery): JQuery;
    layout($container: JQuery): void;
    preferredLayoutSize($container: JQuery, options: HtmlCompPrefSizeOptions): Dimension;
}
//# sourceMappingURL=ColumnLayout.d.ts.map