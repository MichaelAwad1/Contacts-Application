export interface ColorScheme {
    scheme?: string;
    inverted?: boolean;
    tile?: boolean;
}
export declare const colorSchemes: {
    ColorSchemeId: {
        readonly DEFAULT: "default";
        readonly ALTERNATIVE: "alternative";
        readonly RAINBOW: "rainbow";
    };
    /**
     * Converts the given colorScheme that may be a string into an object.
     */
    ensureColorScheme(colorScheme: ColorScheme | string, tile?: boolean): ColorScheme;
    /**
     * Toggles the css classes of the given colorScheme on the given $container. Custom colorSchemes are not handled.
     *
     * @param {$} $container
     */
    toggleColorSchemeClasses($container: JQuery, scheme: string | ColorScheme): void;
    /**
     * Get the css classes of the given colorScheme.
     */
    getCssClasses(scheme: ColorScheme | string): string[];
};
//# sourceMappingURL=colorSchemes.d.ts.map