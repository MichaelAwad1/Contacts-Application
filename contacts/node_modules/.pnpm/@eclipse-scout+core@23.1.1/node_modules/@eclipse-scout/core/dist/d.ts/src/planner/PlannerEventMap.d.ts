import { DateRange, Event, Menu, Planner, PlannerActivity, PlannerDisplayMode, PlannerDisplayModeOptions, PlannerResource, PropertyChangeEvent, WidgetEventMap } from '../index';
export interface PlannerResourcesSelectedEvent<P extends Planner = Planner> extends Event<P> {
    resources: PlannerResource[];
}
export interface PlannerEventMap extends WidgetEventMap {
    'resourcesSelected': PlannerResourcesSelectedEvent;
    'propertyChange:availableDisplayModes': PropertyChangeEvent<PlannerDisplayMode[]>;
    'propertyChange:displayMode': PropertyChangeEvent<PlannerDisplayMode>;
    'propertyChange:displayModeOptions': PropertyChangeEvent<Partial<Record<PlannerDisplayMode, PlannerDisplayModeOptions>>>;
    'propertyChange:menus': PropertyChangeEvent<Menu[]>;
    'propertyChange:selectedActivity': PropertyChangeEvent<PlannerActivity>;
    'propertyChange:selectedResources': PropertyChangeEvent<PlannerResource[]>;
    'propertyChange:selectionRange': PropertyChangeEvent<DateRange>;
    'propertyChange:viewRange': PropertyChangeEvent<DateRange>;
    'propertyChange:yearPanelVisible': PropertyChangeEvent<boolean>;
}
//# sourceMappingURL=PlannerEventMap.d.ts.map