import { EventHandler, Mode, ModeSelector, ModeSelectorFieldModel, PropertyChangeEvent, SomeRequired, ValueField } from '../../../index';
export declare class ModeSelectorField<TValue> extends ValueField<TValue> implements ModeSelectorFieldModel<TValue> {
    model: ModeSelectorFieldModel<TValue>;
    initModel: SomeRequired<this['model'], 'parent' | 'modeSelector'>;
    modeSelector: ModeSelector<TValue>;
    modes: Mode<TValue>[];
    protected _selectedModeChangeHandler: EventHandler<PropertyChangeEvent<Mode<TValue>, ModeSelector>>;
    constructor();
    protected _render(): void;
    protected _renderModeSelector(): void;
    protected _removeModeSelector(): void;
    protected _onSelectedModeChange(event: PropertyChangeEvent<Mode<TValue>, ModeSelector<TValue>>): void;
}
//# sourceMappingURL=ModeSelectorField.d.ts.map