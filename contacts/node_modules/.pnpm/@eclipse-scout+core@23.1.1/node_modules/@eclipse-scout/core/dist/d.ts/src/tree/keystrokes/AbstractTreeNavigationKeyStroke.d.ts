/// <reference types="jquery" />
import { KeyStroke, ScoutKeyboardEvent, Tree, TreeNode } from '../../index';
import KeyboardEventBase = JQuery.KeyboardEventBase;
export type TreeEventCurrentNode = {
    _treeCurrentNode?: TreeNode;
    _$treeCurrentNode?: JQuery;
};
export declare class AbstractTreeNavigationKeyStroke extends KeyStroke {
    field: Tree;
    constructor(tree: Tree, modifierBitMask: number);
    protected _accept(event: ScoutKeyboardEvent & TreeEventCurrentNode): boolean;
    handle(event: KeyboardEventBase<HTMLElement, undefined, HTMLElement, HTMLElement> & TreeEventCurrentNode): void;
    protected _computeNewSelection(currentNode: TreeNode): TreeNode | TreeNode[];
    selectNodesAndReveal(newSelection: TreeNode | TreeNode[], debounceSend?: boolean): void;
}
//# sourceMappingURL=AbstractTreeNavigationKeyStroke.d.ts.map