import { Column, EventHandler, InitModelOf, Page, SomeRequired, Table, TableRow, TableRowDetailModel, TableRowsInsertedEvent, TableRowsUpdatedEvent, Widget } from '../index';
export declare class TableRowDetail extends Widget implements TableRowDetailModel {
    model: TableRowDetailModel;
    initModel: SomeRequired<this['model'], 'parent' | 'table' | 'page'>;
    table: Table;
    page: Page;
    row: TableRow;
    protected _tableRowsUpdatedHandler: EventHandler<TableRowsUpdatedEvent>;
    protected _tableRowsInsertedHandler: EventHandler<TableRowsInsertedEvent>;
    constructor();
    protected _init(model: InitModelOf<this>): void;
    protected _destroy(): void;
    protected _render(): void;
    protected _renderRow(): void;
    protected _renderCell(column: Column<any>): void;
    protected _refreshRow(): void;
    protected _onTableRowsUpdated(event: TableRowsUpdatedEvent): void;
    /**
     * If the table is reloaded without reloading the corresponding nodes,
     * the insert events need to be handled to refresh the table row detail.
     */
    protected _onTableRowsInserted(event: TableRowsInsertedEvent): void;
}
//# sourceMappingURL=TableRowDetail.d.ts.map