/// <reference types="jquery" />
import { KeyStrokeContext, Outline, SearchOutlineEventMap, SearchOutlineModel } from '../../index';
export declare class SearchOutline extends Outline implements SearchOutlineModel {
    model: SearchOutlineModel;
    eventMap: SearchOutlineEventMap;
    self: SearchOutline;
    hasText: boolean;
    searchQuery: string;
    searchStatus: string;
    searchFieldKeyStrokeContext: KeyStrokeContext;
    $searchPanel: JQuery;
    $clearIcon: JQuery;
    $searchStatus: JQuery;
    $queryField: JQuery<HTMLInputElement>;
    constructor();
    protected _initKeyStrokeContext(): void;
    protected _createKeyStrokeContextForSearchField(): KeyStrokeContext;
    protected _render(): void;
    protected _remove(): void;
    protected _renderProperties(): void;
    protected _renderTitle(): void;
    protected _renderSearchQuery(): void;
    protected _renderSearchStatus(): void;
    focusQueryField(): void;
    protected _triggerSearch(): void;
    protected _createOnQueryFieldInputFunction(): (event: JQuery.TriggeredEvent) => void;
    protected _onClearIconMouseDown(event: JQuery.MouseDownEvent): void;
    protected _onQueryFieldKeyPress(event: JQuery.KeyPressEvent): void;
    protected _search(): void;
    protected _setSearchQuery(searchQuery: string): void;
    protected _updateHasText(): void;
    /**
     * Focus and select content AFTER the search outline was rendered (and therefore the query field filled).
     */
    validateFocus(): void;
}
//# sourceMappingURL=SearchOutline.d.ts.map