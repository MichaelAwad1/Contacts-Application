import { Code, LookupCallModel, LookupRow, Predicate, StaticLookupCall } from '../index';
export declare class CodeLookupCall<TCodeId> extends StaticLookupCall<TCodeId> {
    model: CodeLookupCallModel<TCodeId>;
    codeType: string;
    constructor();
    protected _lookupRowByKey(key: TCodeId): LookupRow<TCodeId>;
    protected _lookupRowsByAll(): LookupRow<TCodeId>[];
    protected _lookupRowsByText(text: string): LookupRow<TCodeId>[];
    protected _lookupRowsByRec(rec: TCodeId): LookupRow<TCodeId>[];
    protected _collectLookupRows(predicate?: Predicate<LookupRow<TCodeId>>): LookupRow<TCodeId>[];
    protected _createLookupRow(code: Code<TCodeId>): LookupRow<TCodeId>;
}
export interface CodeLookupCallModel<TCodeId> extends LookupCallModel<TCodeId> {
    /**
     * CodeTypeId {@link CodeType.id}
     */
    codeType: string;
}
//# sourceMappingURL=CodeLookupCall.d.ts.map