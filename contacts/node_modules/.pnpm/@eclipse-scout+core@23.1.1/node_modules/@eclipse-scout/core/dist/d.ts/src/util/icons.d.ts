import { IconDesc } from '../index';
export declare const icons: {
    TABLE_SORT_ASC: string;
    TABLE_SORT_DESC: string;
    EXCLAMATION_MARK_BOLD: string;
    EXCLAMATION_MARK_CIRCLE: string;
    INFO: string;
    CALENDAR: string;
    FILE: string;
    CLOCK: string;
    CHECKED_BOLD: string;
    GROUP: string;
    GROUP_PLUS: string;
    ANGLE_DOUBLE_LEFT: string;
    ANGLE_DOUBLE_RIGHT: string;
    ANGLE_LEFT: string;
    ANGLE_RIGHT: string;
    ANGLE_DOWN: string;
    ANGLE_UP: string;
    LONG_ARROW_DOWN: string;
    LONG_ARROW_UP: string;
    LONG_ARROW_DOWN_PLUS: string;
    LONG_ARROW_UP_PLUS: string;
    MINUS: string;
    PLUS: string;
    LIST: string;
    TARGET: string;
    WORLD: string;
    CHART: string;
    GEAR: string;
    STAR: string;
    STAR_MARKED: string;
    STAR_BOLD: string;
    STAR_SOLID: string;
    PERSON_SOLID: string;
    SEARCH: string;
    FOLDER: string;
    SUM: string;
    AVG: string;
    MAX: string;
    MAX_BOLD: string;
    MIN: string;
    MIN_BOLD: string;
    EXPAND_ALL: string;
    COLLAPSE_ALL: string;
    COLLAPSE: string;
    ELLIPSIS_V: string;
    SLIPPERY: string;
    REMOVE: string;
    REMOVE_BOLD: string;
    PENCIL: string;
    PENCIL_UNDERLINE_SOLID: string;
    ROTATE_LEFT: string;
    ROTATE_RIGHT: string;
    HOURGLASS: string;
    DIAGRAM_AREA: string;
    DIAGRAM_BAR: string;
    DIAGRAM_BARS_HORIZONTAL: string;
    DIAGRAM_BARS_VERTICAL: string;
    DIAGRAM_DOUGHNUT: string;
    DIAGRAM_LINE: string;
    DIAGRAM_LINE_ANGULAR: string;
    DIAGRAM_LINE_SMOOTH: string;
    DIAGRAM_PIE: string;
    DIAGRAM_RADAR: string;
    DIAGRAM_SCATTER: string;
    CHEVRON_LEFT_BOLD: string;
    CHEVRON_RIGHT_BOLD: string;
    CHEVRON_UP_BOLD: string;
    CHEVRON_DOWN_BOLD: string;
    ARROW_RIGHT_BOLD: string;
    PLUS_BOLD: string;
    MINUS_BOLD: string;
    SQUARE_BOLD: string;
    CARET_DOWN: string;
    CARET_UP: string;
    CARET_LEFT: string;
    CARET_RIGHT: string;
    ANGLE_LEFT_BOLD: string;
    ANGLE_RIGHT_BOLD: string;
    ANGLE_UP_BOLD: string;
    ANGLE_DOWN_BOLD: string;
    CIRCLE_BOLD: string;
    LONG_ARROW_DOWN_BOLD: string;
    LONG_ARROW_UP_BOLD: string;
    LONG_ARROW_LEFT_BOLD: string;
    LONG_ARROW_RIGHT_BOLD: string;
    ICON_ID_REGEX: RegExp;
    /**
     * Returns an {@link IconDesc} object with structured info contained in the iconId string.
     */
    parseIconId(iconId: string): IconDesc;
    /**
     * Resolves the value of an iconId property, where the value can contain a reference to
     * an icon constant in these formats:
     * <ul>
     *   <li><code>${iconId:ANGLE_UP}</code> references constant ANGLE_UP</li>
     *   <li><code>${iconId:foo.BAR}</code> references constant foo.icons.BAR, this is used for custom objects with icon constants</li>
     * </ul>
     */
    resolveIconId(value: string): string;
    /**
     * Resolves the value of an iconId property, where the value can contain a reference to
     * an icon constant in these formats:
     * <ul>
     *   <li><code>${iconId:ANGLE_UP}</code> references constant ANGLE_UP</li>
     *   <li><code>${iconId:foo.BAR}</code> references constant foo.icons.BAR, this is used for custom objects with icon constants</li>
     * </ul>
     * @param object object having an icon property which contains a iconId
     * @param iconProperty name of the property where an iconId placeholder should be replaced by the actual iconId. By default, 'iconId' is used as property name.
     */
    resolveIconProperty(object: object, iconProperty?: string): void;
};
//# sourceMappingURL=icons.d.ts.map