import { Dimension, HtmlCompPrefSizeOptions, InitModelOf, Insets, LogicalGridData, LogicalGridLayoutInfoModel, Rectangle } from '../../index';
/**
 * JavaScript port of org.eclipse.scout.rt.ui.swing.LogicalGridLayoutInfo.
 */
export declare class LogicalGridLayoutInfo implements LogicalGridLayoutInfoModel {
    model: LogicalGridLayoutInfoModel;
    gridDatas: LogicalGridData[];
    cons: LogicalGridData[];
    cols: number;
    compSize: Dimension[];
    rows: number;
    width: number[][];
    widthHints: number[];
    height: number[][];
    weightX: number[];
    weightY: number[];
    hgap: number;
    vgap: number;
    rowHeight: number;
    columnWidth: number;
    cellBounds: Rectangle[][];
    widthHint: number;
    widthOnly: boolean;
    $components: JQuery[];
    constructor(model: InitModelOf<LogicalGridLayoutInfo>);
    protected _initializeInfo(): void;
    protected _initializeColumns(): void;
    protected _initializeRows(): void;
    layoutCellBounds(size: Dimension, insets: Insets): Rectangle[][];
    layoutSizes(targetSize: number, sizes: number[][], weights: number[]): number[];
    logicalWidthInPixel(cons: LogicalGridData): number;
    logicalHeightInPixel(cons: LogicalGridData): number;
    uiSizeInPixel($comp: JQuery, options?: HtmlCompPrefSizeOptions): Dimension;
    /**
     * @returns the width hint for the given gridData
     */
    widthHintForGridData(gridData: LogicalGridData): number | null;
}
//# sourceMappingURL=LogicalGridLayoutInfo.d.ts.map