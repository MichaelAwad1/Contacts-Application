import { Column, TableRow } from '../../index';
export declare class BeanColumn<TBean> extends Column<TBean> {
    buildCellForRow(row: TableRow): string;
    /**
     * Override to render the value.
     * If you have a large table you should consider overriding buildCellForRow instead and create the html as string instead of using jquery.
     */
    protected _renderValue($cell: JQuery, value: TBean): void;
    protected _plainTextForRow(row: TableRow): string;
    /**
     * Default approach reads the html using buildCellForRow and uses _preprocessTextForGrouping to generate the value. Just using text() does not work because new lines get omitted.
     * If this approach does not work for a specific bean column, just override this method.
     */
    cellValueOrTextForCalculation(row: TableRow): string;
    cellTextForGrouping(row: TableRow): string;
    cellTextForTextFilter(row: TableRow): string;
    compare(row1: TableRow, row2: TableRow): number;
}
//# sourceMappingURL=BeanColumn.d.ts.map