import { Logger, LogLevel } from '../index';
/**
 * A NullLogger instance is installed when Log4Javascript is not active (the popup
 * is not opened). In that case we write WARN, ERROR and FATAL to the console output
 * because otherwise some errors are hard to track. This is true especially for errors
 * that occur in a Promise. A developer should at least log these errors.
 */
export declare class NullLogger implements Logger {
    trace(): void;
    debug(): void;
    info(...logArgs: any[]): void;
    warn(...logArgs: any[]): void;
    error(...logArgs: any[]): void;
    fatal(...logArgs: any[]): void;
    isEnabledFor(): boolean;
    isTraceEnabled(): boolean;
    isDebugEnabled(): boolean;
    isInfoEnabled(): boolean;
    isWarnEnabled(): boolean;
    isErrorEnabled(): boolean;
    isFatalEnabled(): boolean;
    protected _log(level: LogLevel, logArgs: any[]): void;
    protected _formatTime(): string;
}
//# sourceMappingURL=NullLogger.d.ts.map