import { EnumObject } from '../index';
/**
 * Custom JavaScript Date Format
 *
 * Support for formatting and parsing dates based on a pattern string and some locale
 * information from the server model. A subset of the standard Java pattern strings
 * (see SimpleDateFormat) with the most commonly used patterns is supported.
 *
 * This object only operates on the local time zone.
 * <p>
 * locale.dateFormatSymbols contains:
 * <ul>
 * <li>weekdays start with Sunday (starts at 0 and not 1 as it does in java)</li>
 * <li>weekdaysShort start with Sunday (starts at 0 and not 1 as it does in java)</li>
 * <li>months start with January</li>
 * <li>monthsShort start with January<7li>
 * <li>am</li>
 * <li>pm</li>
 *</ul>
 *
 * @see http://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html
 */
export declare const DateFormatPatternType: {
    readonly YEAR: "year";
    readonly MONTH: "month";
    readonly WEEK_IN_YEAR: "week_in_year";
    readonly DAY_IN_MONTH: "day_in_month";
    readonly WEEKDAY: "weekday";
    readonly HOUR_24: "hour_24";
    readonly HOUR_12: "hour_12";
    readonly AM_PM: "am_pm";
    readonly MINUTE: "minute";
    readonly SECOND: "second";
    readonly MILLISECOND: "millisecond";
    readonly TIMEZONE: "timezone";
};
export type DateFormatPatternTypes = EnumObject<typeof DateFormatPatternType>;
//# sourceMappingURL=DateFormatPatternType.d.ts.map