import { CompositeField, EventHandler, FormField, GridData, GroupBox, HtmlEnvironment, InitModelOf, PropertyChangeEvent, ResponsiveHandler, TreeVisitResult } from '../index';
export declare class GroupBoxResponsiveHandler extends ResponsiveHandler {
    widget: GroupBox;
    protected _compositeFields: CompositeField[];
    protected _formFieldAddedHandler: EventHandler<PropertyChangeEvent<any, CompositeField>>;
    protected _htmlPropertyChangeHandler: EventHandler<PropertyChangeEvent<any, HtmlEnvironment>>;
    constructor();
    static TransformationType: {
        readonly LABEL_POSITION_ON_FIELD: "labelPositionOnField";
        readonly LABEL_POSITION_ON_TOP: "labelPositionOnTop";
        readonly LABEL_VISIBILITY: "labelVisibility";
        readonly STATUS_POSITION_ON_TOP: "statusPositionOnTop";
        readonly STATUS_VISIBILITY: "statusVisibility";
        readonly VERTICAL_ALIGNMENT: "verticalAlignment";
        readonly GRID_COLUMN_COUNT: "gridColumnCount";
        readonly HIDE_PLACE_HOLDER_FIELD: "hidePlaceHolderField";
        readonly FIELD_SCALABLE: "fieldScalable";
        readonly RADIO_BUTTON_GROUP_USE_UI_HEIGHT: "radioButtonGroupUseUiHeight";
    };
    protected _initDefaults(): void;
    protected _onHtmlEnvironmentPropertyChange(): void;
    init(model: InitModelOf<this>): void;
    destroy(): void;
    active(): boolean;
    getCondensedThreshold(): number;
    protected _transform(): void;
    protected _transformWidget(widget: FormField): TreeVisitResult;
    /**
     * Label Position -> ON_FIELD
     */
    protected _transformLabelPositionOnField(field: FormField, apply: boolean): void;
    /**
     * Label Position -> ON_TOP
     */
    protected _transformLabelPositionOnTop(field: FormField, apply: boolean): void;
    /**
     * Label visibility
     */
    protected _transformLabelVisibility(field: FormField, apply: boolean): void;
    getGridData(field: FormField): GridData;
    setGridData(field: FormField, gridData: GridData): void;
    /**
     * Status position
     */
    protected _transformStatusPosition(field: FormField, apply: boolean): void;
    /**
     * Status visibility
     */
    protected _transformStatusVisibility(field: FormField, apply: boolean): void;
    /**
     * Vertical alignment
     */
    protected _transformVerticalAlignment(field: FormField, apply: boolean): void;
    /**
     * Column count
     */
    protected _transformGridColumnCount(field: FormField, apply: boolean): void;
    /**
     * Hide placeholder field
     */
    protected _transformHidePlaceHolderField(field: FormField, apply: boolean): void;
    /**
     * GroupBox: Makes sure weightX is set to 1 which makes the field scalable.
     *
     * Reason:<br>
     * The width of the field should be adjusted according to the display width, otherwise it may be too big to be
     * displayed. <br>
     * Additionally, since we use a one column layout, setting weightX to 0 might destroy the layout because it affects
     * all the fields in the groupBox.
     */
    protected _transformFieldScalable(field: FormField, apply: boolean): void;
    protected _transformRadioButtonGroupUseUiHeight(field: FormField, apply: boolean): void;
    protected _onFormFieldAdded(event: PropertyChangeEvent<any, CompositeField>): void;
}
//# sourceMappingURL=GroupBoxResponsiveHandler.d.ts.map