import { Event, LookupCall, LookupResult, PropertyChangeEvent, TagField, ValueFieldAcceptInputEvent, ValueFieldEventMap } from '../../../index';
export interface TagFieldAcceptInputEvent<T = TagField> extends ValueFieldAcceptInputEvent<string[], T> {
    value: string[];
}
export interface TagFieldLookupCallDoneEvent<T = TagField> extends Event<T> {
    result: LookupResult<string>;
}
export interface TagFieldPrepareLookupCallEvent<T = TagField> extends Event<T> {
    lookupCall: LookupCall<string>;
}
export interface TagFieldEventMap extends ValueFieldEventMap<string[]> {
    'acceptInput': TagFieldAcceptInputEvent;
    'lookupCallDone': TagFieldLookupCallDoneEvent;
    'prepareLookupCall': TagFieldPrepareLookupCallEvent;
    'propertyChange:lookupCall': PropertyChangeEvent<LookupCall<string>>;
    'propertyChange:maxLength': PropertyChangeEvent<number>;
}
//# sourceMappingURL=TagFieldEventMap.d.ts.map