/// <reference types="jquery" />
import { Event, EventHandler, FieldStatus, InitModelOf, PropertyChangeEvent, SomeRequired, Status, TabEventMap, TabItem, TabModel, Widget } from '../../../index';
export declare class Tab extends Widget implements TabModel {
    model: TabModel;
    initModel: SomeRequired<this['model'], 'parent' | 'tabItem'>;
    eventMap: TabEventMap;
    self: Tab;
    label: string;
    subLabel: string;
    selected: boolean;
    overflown: boolean;
    marked: boolean;
    errorStatus: Status;
    tooltipText: string;
    fieldStatus: FieldStatus;
    tabItem: TabItem;
    tabbable: boolean;
    $title: JQuery;
    $label: JQuery;
    $subLabel: JQuery;
    protected _preventTabSelection: boolean;
    protected _tabPropertyChangeHandler: EventHandler<PropertyChangeEvent>;
    protected _statusMouseDownHandler: EventHandler;
    protected _desktopPropertyChangeHandler: EventHandler<PropertyChangeEvent>;
    constructor();
    protected _init(options: InitModelOf<this>): void;
    protected _destroy(): void;
    protected _render(): void;
    protected _remove(): void;
    protected _renderProperties(): void;
    protected _renderVisible(): void;
    setLabel(label: string): void;
    protected _renderLabel(): void;
    setSubLabel(subLabel: string): void;
    protected _renderSubLabel(): void;
    setTooltipText(tooltipText: string): void;
    protected _renderTooltipText(): void;
    setErrorStatus(errorStatus: Status): void;
    protected _renderErrorStatus(): void;
    protected _updateErrorStatusClasses(statusClass: string): void;
    protected _updateStatus(): void;
    protected _computeVisible(): boolean;
    setTabbable(tabbable: boolean): void;
    protected _renderTabbable(): void;
    select(): void;
    setSelected(selected: boolean): void;
    protected _renderSelected(): void;
    setMarked(marked: boolean): void;
    protected _renderMarked(): void;
    setOverflown(overflown: boolean): void;
    protected _renderOverflown(): void;
    protected _onDesktopPropertyChange(event: PropertyChangeEvent): void;
    protected _onTabMouseDown(event: JQuery.MouseDownEvent): void;
    protected _onStatusMouseDown(event: Event): void;
    protected _onTabPropertyChange(event: PropertyChangeEvent): void;
}
//# sourceMappingURL=Tab.d.ts.map