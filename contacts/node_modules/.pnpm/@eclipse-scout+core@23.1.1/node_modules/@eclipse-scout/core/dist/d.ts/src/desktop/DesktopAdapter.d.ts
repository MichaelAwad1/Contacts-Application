import { Desktop, DesktopCancelFormsEvent, DesktopFormActivateEvent, DesktopHistoryState, Event, Form, ModelAdapter, Widget } from '../index';
export declare class DesktopAdapter extends ModelAdapter {
    widget: Desktop;
    constructor();
    protected _goOffline(): void;
    protected _goOnline(): void;
    protected _onWidgetHistoryEntryActivate(event: Event & DesktopHistoryState): void;
    protected _onWidgetFormActivate(event: DesktopFormActivateEvent): void;
    protected _sendFormActivate(form: Form): void;
    protected _prepareRemoteProperty(propertyName: string, value: any): any;
    protected _sendFocusedElement(focusedElement: Widget): void;
    protected _logoAction(event: Event): void;
    protected _onWidgetEvent(event: Event<Desktop>): void;
    protected _onFormShow(event: any): void;
    protected _onFormHide(event: any): void;
    protected _onFormActivate(event: any): void;
    protected _onWidgetCancelAllForms(event: DesktopCancelFormsEvent): void;
    protected _onMessageBoxShow(event: any): void;
    protected _onMessageBoxHide(event: any): void;
    protected _onFileChooserShow(event: any): void;
    protected _onFileChooserHide(event: any): void;
    protected _onOpenUri(event: any): void;
    protected _onOutlineChanged(event: any): void;
    protected _onAddNotification(event: any): void;
    protected _onRemoveNotification(event: any): void;
    protected _onOutlineContentActivate(event: any): void;
    protected _onRequestGeolocation(event: any): void;
    onModelAction(event: any): void;
}
//# sourceMappingURL=DesktopAdapter.d.ts.map