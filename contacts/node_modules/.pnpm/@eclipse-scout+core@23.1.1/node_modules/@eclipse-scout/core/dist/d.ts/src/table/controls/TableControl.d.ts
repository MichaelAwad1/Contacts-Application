/// <reference types="jquery" />
import { AbstractLayout, Action, ActionKeyStroke, InitModelOf, KeyStrokeContext, Table, TableControlModel, TableFooter, TooltipSupport } from '../../index';
export declare class TableControl extends Action implements TableControlModel {
    model: TableControlModel;
    tableFooter: TableFooter;
    table: Table;
    contentRendered: boolean;
    height: number;
    animateDuration: number;
    resizerVisible: boolean;
    denseClass: string;
    tableControlKeyStrokeContext: KeyStrokeContext;
    $contentContainer: JQuery;
    constructor();
    static CONTAINER_SIZE: number;
    static CONTAINER_ANIMATE_DURATION: number;
    protected _init(model: InitModelOf<this>): void;
    protected _initKeyStrokeContext(): void;
    protected _createKeyStrokeContextForTableControl(): KeyStrokeContext;
    protected _createLayout(): AbstractLayout;
    protected _render(): void;
    remove(): void;
    protected _renderContent($parent: JQuery): void;
    protected _removeContent(): void;
    removeContent(): void;
    /**
     * Renders the content if not already rendered.<br>
     * Opens the container if the container is not already open.<br>
     * Does nothing if the content is not available yet to -> don't open container if content is not rendered yet to prevent blank container or lags during open.<br>
     * Does nothing if the control is not selected.
     */
    renderContent(): void;
    get$Scrollable(): JQuery;
    protected _renderSelected(selected?: boolean, options?: {
        closeWhenUnselected?: boolean;
        animate?: boolean;
    }): void;
    /**
     * Returns true if the table control may be displayed (opened).
     */
    isContentAvailable(): boolean;
    toggle(): void;
    setSelected(selected: boolean, options?: {
        closeWhenUnselected?: boolean;
        animate?: boolean;
    }): void;
    protected _setSelected(selected: boolean): void;
    protected _configureTooltip(): InitModelOf<TooltipSupport>;
    protected _onMouseDown(event: JQuery.MouseDownEvent): void;
    onControlContainerOpened(): void;
    onControlContainerClosed(): void;
    protected _createActionKeyStroke(): ActionKeyStroke;
    getTable(): Table;
}
//# sourceMappingURL=TableControl.d.ts.map