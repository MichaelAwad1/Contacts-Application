import { Filterable, FilterElement, FilterResult, TextFilter, Widget, WidgetSupportOptions } from '../index';
export interface FilterSupportOptions<TElem extends FilterElement> extends WidgetSupportOptions {
    widget: Widget & Filterable<TElem>;
    /**
     * Filter all elements.
     */
    filterElements?(): FilterResult<TElem>;
    /**
     * Get all elements to which the filters should be applied. Mandatory if no {@link filterElements} is specified.
     */
    getElementsForFiltering?(): TElem[];
    /**
     * Get text of an element.
     */
    getElementText?(elem: TElem): string;
    /**
     * Create a text filter. Optional
     */
    createTextFilter?(): TextFilter<TElem>;
    /**
     * Update the text on the filter, this is mandatory if {@link createTextFilter} is set.
     */
    updateTextFilterText?(filter: TextFilter<TElem>, text: string): boolean;
}
//# sourceMappingURL=FilterSupportOptions.d.ts.map