/// <reference types="jquery" />
import { Action, ActionKeyStroke, Desktop, EventHandler, InitModelOf, PropertyChangeEvent, ViewButtonDisplayStyle, ViewButtonEventMap, ViewButtonModel } from '../../index';
export declare class ViewButton extends Action implements ViewButtonModel {
    model: ViewButtonModel;
    eventMap: ViewButtonEventMap;
    self: ViewButton;
    displayStyle: ViewButtonDisplayStyle;
    selectedAsMenu: boolean;
    protected _desktopInBackgroundHandler: EventHandler<PropertyChangeEvent<boolean, Desktop>>;
    constructor();
    protected _init(model: InitModelOf<this>): void;
    protected _destroy(): void;
    renderAsTab($parent: JQuery): void;
    protected _render(): void;
    protected _remove(): void;
    protected _renderProperties(): void;
    protected _renderInBackground(): void;
    protected _renderText(): void;
    setDisplayStyle(displayStyle: ViewButtonDisplayStyle): void;
    protected _onMouseEvent(event: JQuery.MouseDownEvent): void;
    protected _createActionKeyStroke(): ActionKeyStroke;
    setSelectedAsMenu(selectedAsMenu: boolean): void;
    protected _onDesktopInBackgroundChange(event: PropertyChangeEvent<boolean, Desktop>): void;
}
//# sourceMappingURL=ViewButton.d.ts.map