/// <reference types="jquery" />
import { AbstractLayout, Dimension, Insets, Popup, Rectangle } from '../index';
export declare class PopupLayout extends AbstractLayout {
    popup: Popup;
    /** enables popups with a height which depends on the width (= popups with wrapping content) */
    doubleCalcPrefSize: boolean;
    autoPosition: boolean;
    autoSize: boolean;
    resizeAnimationRunning: boolean;
    resizeAnimationDuration: JQuery.Duration;
    protected _autoPositionOrig: boolean;
    constructor(popup: Popup);
    layout($container: JQuery): void;
    protected _resizeAnimated(currentBounds: Rectangle, prefSize: Dimension): void;
    protected _position(switchIfNecessary?: boolean): void;
    protected _setSize(prefSize: Dimension): void;
    adjustSize(prefSize: Dimension): Dimension;
    protected _adjustSize(prefSize: Dimension): Dimension;
    /**
     * Considers window boundaries.
     *
     */
    protected _calcMaxSize(): Dimension;
    protected _adjustSizeWithAnchor(prefSize: Dimension): Dimension;
    /**
     * Considers window boundaries.
     *
     */
    protected _calcMaxSizeAroundAnchor(): Insets;
    disableAutoPosition(): void;
    resetAutoPosition(): void;
}
//# sourceMappingURL=PopupLayout.d.ts.map