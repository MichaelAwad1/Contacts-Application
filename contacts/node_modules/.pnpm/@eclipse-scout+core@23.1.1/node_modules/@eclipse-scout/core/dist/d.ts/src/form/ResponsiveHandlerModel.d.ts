import { ObjectModel, ResponsiveHandler, ResponsiveState, Widget } from '../index';
export interface ResponsiveHandlerModel extends ObjectModel<ResponsiveHandler> {
    widget?: Widget;
    /**
     * Default is -1.
     */
    compactThreshold?: number;
    /**
     * Default is -1.
     */
    condensedThreshold?: number;
    /**
     * Default is ResponsiveManager.ResponsiveState.NORMAL.
     */
    oldState?: ResponsiveState;
    /**
     * Default is ResponsiveManager.ResponsiveState.NORMAL.
     */
    state?: ResponsiveState;
    /**
     * Default is [ResponsiveManager.ResponsiveState.NORMAL, ResponsiveManager.ResponsiveState.COMPACT].
     */
    allowedStates?: ResponsiveState[];
    /**
     * Default is {}.
     */
    transformations?: Record<string, (Widget: any, boolean: any) => void>;
    /**
     * Default is {}.
     */
    enabledTransformations?: Record<ResponsiveState, string[]>;
}
//# sourceMappingURL=ResponsiveHandlerModel.d.ts.map