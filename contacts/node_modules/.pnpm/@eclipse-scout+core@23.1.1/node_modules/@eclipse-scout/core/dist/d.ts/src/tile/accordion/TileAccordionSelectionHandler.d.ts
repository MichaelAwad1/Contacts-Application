import { Tile, TileAccordion, TileGrid, TileGridSelectionHandler } from '../../index';
export declare class TileAccordionSelectionHandler extends TileGridSelectionHandler {
    /** The difference to the main selectionHandler is that this one works on the TileAccordion rather than on the TileGrid */
    tileAccordion: TileAccordion;
    constructor(tileAccordion: TileAccordion);
    getFilteredTiles(): Tile[];
    getFilteredTileCount(): number;
    getVisibleTiles(): Tile[];
    getVisibleTileCount(): number;
    getSelectedTiles(): Tile[];
    getFocusedTile(): Tile;
    getVisibleGridRowCount(): number;
    getVisibleGridX(tile: Tile): number;
    getVisibleGridY(tile: Tile): number;
    scrollTo(tile: Tile): void;
    getTileGridByRow(rowIndex: number): TileGrid;
    findVisibleTileIndexAt(x: number, y: number, startIndex?: number, reverse?: boolean): number;
    isHorizontalGridActive(): boolean;
}
//# sourceMappingURL=TileAccordionSelectionHandler.d.ts.map