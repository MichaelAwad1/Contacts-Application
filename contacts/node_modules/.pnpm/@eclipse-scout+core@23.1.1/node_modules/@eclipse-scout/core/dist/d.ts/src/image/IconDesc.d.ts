import { EnumObject } from '../index';
export type IconType = EnumObject<typeof IconDesc.IconType>;
export declare class IconDesc {
    iconType: IconType;
    font: string;
    iconCharacter: string;
    iconUrl: string;
    constructor();
    static IconType: {
        readonly FONT_ICON: 0;
        readonly BITMAP: 1;
    };
    static DEFAULT_FONT: string;
    /**
     * Returns a CSS class based on the used font-name.
     */
    cssClass(): string;
    /**
     * Returns a CSS class string to be used with JQuery.add/removeClass().
     */
    appendCssClass(cssClass: string): string;
    isFontIcon(): boolean;
    isBitmap(): boolean;
    /**
     * Ensures that the given icon is of type {@link IconDesc}. If a string is provided, it is assumed that the string is the iconId which may be parsed to create the {@link IconDesc}.
     */
    static ensure(icon: string | IconDesc): IconDesc;
}
//# sourceMappingURL=IconDesc.d.ts.map