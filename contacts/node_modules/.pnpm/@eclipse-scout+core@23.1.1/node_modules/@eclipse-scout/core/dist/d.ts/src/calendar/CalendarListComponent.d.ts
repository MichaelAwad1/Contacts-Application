/// <reference types="jquery" />
import { CalendarComponent, EventListener } from '../index';
/**
 * Calendar component as used in the list panel of the calendar.
 * Delegates most functions to the CalendarComponent instance used as source.
 * It's important we clean-up the registered listeners on the model-adapter, since
 * new instances of CalendarListComponent are created every time we click on a date
 * in the calendar, but the CalendarComponent instance is always the same.
 */
export declare class CalendarListComponent {
    partDay: Date;
    source: CalendarComponent;
    $container: JQuery;
    protected _selectedListener: EventListener;
    protected _removeListener: EventListener;
    constructor(partDay: Date, source: CalendarComponent);
    render($parent: JQuery): void;
    /**
     * Prevent list-component from gaining focus (*1). Since the component is removed/rendered
     * after the click the focus would be on the body afterwards #222862.
     */
    protected _onMouseDown(source: CalendarComponent, event: JQuery.MouseDownEvent<HTMLDivElement>): void;
    remove(): void;
}
//# sourceMappingURL=CalendarListComponent.d.ts.map