import { AbstractLayout, Dimension, HtmlCompPrefSizeOptions } from '../index';
export interface RowLayoutOptions {
    /** If true, all elements will be as width as the container. Default is true. */
    stretch?: boolean;
    /** If false, the layout won't change the size of the elements and just calls {@link HtmlComponent.validateLayout}. Default is true. */
    pixelBasedSizing?: boolean;
}
/**
 * RowLayout = each child element represents a row
 * +-----------------+
 * |                 |
 * +-----------------+
 * |                 |
 * |                 |
 * +-----------------+
 * |                 |
 * +-----------------+
 */
export declare class RowLayout extends AbstractLayout implements RowLayoutOptions {
    stretch: boolean;
    pixelBasedSizing: boolean;
    constructor(options?: RowLayoutOptions);
    protected _getChildren($container: JQuery): JQuery;
    layout($container: JQuery): void;
    preferredLayoutSize($container: JQuery, options: HtmlCompPrefSizeOptions): Dimension;
}
//# sourceMappingURL=RowLayout.d.ts.map